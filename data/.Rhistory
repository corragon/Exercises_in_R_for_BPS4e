fun1 <- function(x) 1-abs(x)
plot (fun1, -1, 1, xlim=c(-2,2), ylim=c(-2,2), pty="s", col=2)
plot (fun1, -1, 1, xlim=c(-2,2), ylim=c(-2,2), pty="s", col=2); abline(h=0, v=0)
rw <- function(x) 300+5x
rw <- function(x) 5*x+300
desc
desc()
summary()
summary(c(31, 22 ,34, 10, 2, 25))
describe(c(31, 22 ,34, 10, 2, 25))
import psych
library(psych)
describe(c(31, 22 ,34, 10, 2, 25))
install.packages("swirl")
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, time=40)
rep(0, times=40)
rep(c(1, 2, 3), times=10)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each=10)
search()
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
1:20
pi:10
play()
pi:pi+10
pi:(pi+10)
nxt()
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq=seq(5, 10, length=30)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Thomas")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("x", "y", "z", sep=""))
paste(1:3, c("X", "Y", "Z", sep=""))
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep=
"-")
x <- c(44, NA, 5, NA)
x * 3
y<- rnorm(1000)
z <- rep(NA, 1000)
my_date <- sample(c(y, z), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[300]
x[3000]
x[!c(2, 10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo",
| "bar")]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
search()
library?
x
?library
x<-library()
x
library(swirl)
swirl()
T==T
TRUE == TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5 !=7
!(5!=7)
!5!=7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
play()
xor(F,T)
xor(T,T)
xor(F,F)
xor(T,F)
nxt()
ints(sample(10))
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
lapply
?rnorm
?runif
hist(runif(100, 1, 10))
hist(runif(1000, 1, 10))
hist(runif(1000, 1, 10))
x<-runif(100, 1, 10)
head(x)
mean(x)
rep(NA, times=10)
?plot
plot(runif(100,1,10),runif(100,1,10))
str(plot(runif(100,1,10),runif(100,1,10)))
library(datasets)
data(isis)
data(iris)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
hpcyl <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(hpcyl["4"] - hpcyl["8"])
?solve
?exp
setwd("G:/Projects/Basic Practice of Statistics/PCDataSets/PC-Ascii")
movieGoers <- read.table("ex01-28.dat")
barplot(movieGoers)
table(movieGoers)
?barplot
movieGoers <- read.table("ex01-28.dat", header=T, colClasses=c("character", "numeric"))
barplot(movieGoers)
barplot(movieGoers$percent)
barplot(movieGoers$percent, names.arg=movieGoers$age)
barplot(movieGoers$percent, names.arg=movieGoers$age, col="wheat")
barplot(movieGoers$percent, names.arg=movieGoers$age, col="wheat", ylab="Percent", xlab="Age Range")
barplot(movieGoers$percent, names.arg=movieGoers$age, col="wheat", ylab="Percent", xlab="Age Range", main="Movie Watchers")
?barplot
barplot(movieGoers$percent)
